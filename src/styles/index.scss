@use "reset";
@import "variables";

* {
  font-family: $main-font;
}


html {
  font-size: $standard;
  color: $primary;
  background-color: $background;

  img {
    height: auto;
    aspect-ratio: 1/1;
  }

  .playground {
    display: flex;
    flex-flow: column nowrap;

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-inline: $standard;
      padding-block: $standard / 2;
      line-height: $standard * 1.5;
      background-color: $menu;
      color: $light;
      font-weight: $bold;

      div {
        display: flex;
        align-items: center;
        gap: $standard / 2;

        .level {
          padding: $standard / 2;
          border: $thin solid $dark;
          border-radius: $standard / 2;
          background-color: $primary;
          font-weight: $bold;
          outline: none;
          cursor: context-menu;

          &:hover, &:active {
            opacity: 0.85;
          }
        }
      }
    }
    
    .field {
      display: grid;
      grid-template-rows: repeat(11, $item-size);
      width: $item-size * 13;
      margin-inline: auto;
      margin-block: $standard;
      background-image: url('cover.jpg');
      background-size: contain;
      outline: $thin solid $dark;
      filter: drop-shadow(0 0 $thin $dark);
  
      .field-item {
        width: $item-size;
      }
    }

    .moves {
      display: flex;
      gap: $standard;
      justify-content: center;

      .undo-move {
        width: $standard;
        height: $standard;
        cursor: pointer;

        &:hover, &:active {
          opacity: 0.5;
        }
      }
    }
  }
}


@media screen and ($pc) { 
  html {
    background-image: url('background.avif');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;

    .playground {
      flex-direction: row;

      .header {
        flex-direction: column;
        justify-content: flex-start;
        background-color: inherit;
        color: inherit;
      }

      .field {
        grid-template-rows: repeat(11, $pc-item-size);
        width: $pc-item-size * 13;
        outline: $standard / 1.5 solid $transparent;
        border-radius: $standard / 3;
        margin-block: $standard * 2;

        .field-item {
          width: $pc-item-size;
        }
      }
    }
  }
}